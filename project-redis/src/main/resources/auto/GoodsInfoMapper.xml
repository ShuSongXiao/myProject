<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xss.repository.GoodsInfoMapper">
    <resultMap id="BaseResultMap" type="com.xss.model.GoodsInfo">
        <id column="ID" jdbcType="INTEGER" property="id" />
        <result column="GOODS_ID" jdbcType="VARCHAR" property="goodsId" />
        <result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
        <result column="IMG_URL" jdbcType="VARCHAR" property="imgUrl" />
        <result column="GOODS_PRICE" jdbcType="VARCHAR" property="goodsPrice" />
    </resultMap>
    <resultMap id="BaseResultMap_Alias" type="com.xss.model.GoodsInfo">
        <id column="GOODS_INFO_ID" jdbcType="INTEGER" property="id" />
        <result column="GOODS_INFO_GOODS_ID" jdbcType="VARCHAR" property="goodsId" />
        <result column="GOODS_INFO_GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
        <result column="GOODS_INFO_IMG_URL" jdbcType="VARCHAR" property="imgUrl" />
        <result column="GOODS_INFO_GOODS_PRICE" jdbcType="VARCHAR" property="goodsPrice" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `ID`, `GOODS_ID`, `GOODS_NAME`, `IMG_URL`, `GOODS_PRICE`
    </sql>
    <sql id="Base_Column_List_Alias">
        `GOODS_INFO`.`ID` as `GOODS_INFO_ID`, `GOODS_INFO`.`GOODS_ID` as `GOODS_INFO_GOODS_ID`, 
        `GOODS_INFO`.`GOODS_NAME` as `GOODS_INFO_GOODS_NAME`, `GOODS_INFO`.`IMG_URL` as `GOODS_INFO_IMG_URL`, 
        `GOODS_INFO`.`GOODS_PRICE` as `GOODS_INFO_GOODS_PRICE`
    </sql>
    <select id="selectByExample" parameterType="com.xss.model.GoodsInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from `GOODS_INFO`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `GOODS_INFO`
        where `ID` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from `GOODS_INFO`
        where `ID` = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xss.model.GoodsInfoExample">
        delete from `GOODS_INFO`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.xss.model.GoodsInfo" useGeneratedKeys="true">
        insert into `GOODS_INFO`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="@Ognl@isNotEmpty(id)">
                `ID`,
            </if>
            <if test="@Ognl@isNotEmpty(goodsId)">
                `GOODS_ID`,
            </if>
            <if test="@Ognl@isNotEmpty(goodsName)">
                `GOODS_NAME`,
            </if>
            <if test="@Ognl@isNotEmpty(imgUrl)">
                `IMG_URL`,
            </if>
            <if test="@Ognl@isNotEmpty(goodsPrice)">
                `GOODS_PRICE`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="@Ognl@isNotEmpty(id)">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="@Ognl@isNotEmpty(goodsId)">
                #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(goodsName)">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(imgUrl)">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(goodsPrice)">
                #{goodsPrice,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xss.model.GoodsInfoExample" resultType="java.lang.Integer">
        select count(*) from `GOODS_INFO`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `GOODS_INFO`
        <set>
            <if test="@Ognl@isNotEmpty(record.id)">
                `ID` = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="@Ognl@isNotEmpty(record.goodsId)">
                `GOODS_ID` = #{record.goodsId,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(record.goodsName)">
                `GOODS_NAME` = #{record.goodsName,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(record.imgUrl)">
                `IMG_URL` = #{record.imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(record.goodsPrice)">
                `GOODS_PRICE` = #{record.goodsPrice,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xss.model.GoodsInfo">
        update `GOODS_INFO`
        <set>
            <if test="@Ognl@isNotEmpty(goodsId)">
                `GOODS_ID` = #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(goodsName)">
                `GOODS_NAME` = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(imgUrl)">
                `IMG_URL` = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="@Ognl@isNotEmpty(goodsPrice)">
                `GOODS_PRICE` = #{goodsPrice,jdbcType=VARCHAR},
            </if>
        </set>
        where `ID` = #{id,jdbcType=INTEGER}
    </update>
</mapper>