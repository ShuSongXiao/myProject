<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--继承的父项目-->
    <parent>
        <artifactId>my.project</artifactId>
        <groupId>xss.project</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>web-parent</artifactId>
    <packaging>pom</packaging>
    <description>parent module with project</description>

    <!--定义全局依赖包的版本号-->
    <properties>
        <druid.version>1.0.28</druid.version>
        <mybatis.version>3.4.0</mybatis.version>
        <mybatis-spring.version>1.3.0</mybatis-spring.version>
        <mybatis-spring-boot-starter>1.1.1</mybatis-spring-boot-starter>

        <mybatis-redis.version>1.0.0-beta2</mybatis-redis.version>
        <mybatis-paginator.version>1.2.15</mybatis-paginator.version>

        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>

        <guava.version>20.0</guava.version>
        <jackson.version>2.8.6</jackson.version>
        <joda.version>2.9.6</joda.version>

        <poi.version>3.15</poi.version>
        <poi.xwpf.version>1.0.6</poi.xwpf.version>

        <okhttp.version>2.7.5</okhttp.version>
        <okhttp3.version>3.4.1</okhttp3.version>

        <qrgen.version>1.4</qrgen.version>
        <zxing.version>3.2.1</zxing.version>
        <im4java.version>1.4.0</im4java.version>

        <lombok.version>1.16.8</lombok.version>
        <lombok-maven-plugin.version>1.16.8.0</lombok-maven-plugin.version>

        <!--<ice.version>3.4.1-SNAPSHOT</ice.version>-->
        <webmagic.version>0.6.1</webmagic.version>
    </properties>

    <!--定义所有的子项目使用依赖项的统一版本，子项目会使用此元素中定义的版本号-->
    <dependencyManagement>
        <dependencies>
            <!--自身项目-->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>web-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>web-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>web-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>web-java-test</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!--可添加其他项目依赖-->

            <!-- 支付通知, 需要我们实现服务端 -->
            <dependency>
                <groupId>com.hhly</groupId>
                <artifactId>paynotify</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>

            <!-- 各方面都可以用来替代 http-client -->
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>

            <!-- 二维码. qrgen 基于 zxing, 使用 grgen 提供的 QRCode 会方便一点 -->
            <dependency>
                <groupId>net.glxn</groupId>
                <artifactId>qrgen</artifactId>
                <version>${qrgen.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${zxing.version}</version>
            </dependency>

            <!--
                图片操作. 实现图片的压缩, 切割, 水印等
                基于 ImageMagick(convert 命令等) 或 GraphicsMagick(gm convert 命令等, 更稳定且更简洁, 消费资源更少)
                JMagick 基于 JNI 操作 IM, 还不支持 64 位, 远不如 im4java 只是封装 IM 或 GM 的命令好用
            -->
            <dependency>
                <groupId>org.im4java</groupId>
                <artifactId>im4java</artifactId>
                <version>${im4java.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.opensagres.xdocreport</groupId>
                <artifactId>org.apache.poi.xwpf.converter.xhtml</artifactId>
                <version>${poi.xwpf.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--<dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter}</version>
            </dependency>-->

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>org.mybatis.caches</groupId>
                <artifactId>mybatis-redis</artifactId>
                <version>${mybatis-redis.version}</version>
            </dependency>-->
            <!--
            mybatis 分页插件
            http://my.oschina.net/miemiedev/blog/135516
            https://github.com/miemiedev/mybatis-paginator
            -->
            <dependency>
                <groupId>com.github.miemiedev</groupId>
                <artifactId>mybatis-paginator</artifactId>
                <version>${mybatis-paginator.version}</version>
            </dependency>

            <dependency>
                <groupId>us.codecraft</groupId>
                <artifactId>webmagic-core</artifactId>
                <version>${webmagic.version}</version>
            </dependency>
            <dependency>
                <groupId>us.codecraft</groupId>
                <artifactId>webmagic-extension</artifactId>
                <version>${webmagic.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!--所有生命在dependencies里的依赖都会自动引入，并默认被所有的子项目继承-->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!--dependencyManagement  dependencies
        区别
           dependencies即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项（全部继承）
         dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。
         如果不在子项目中声明依赖，是不会从父项目中继承下来的；只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，
         并且version和scope都读取自父pom;另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。
    -->

    <build>
        <!--构建中所用到的插件-->
        <plugins>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>${lombok-maven-plugin.version}</version>
            </plugin>

            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>